
/*
 * WebFontをセットします
 * @desc webフォントの設定用mixin
 * @param $fontName variableで登録した任意の名前
 * @param $path variableで登録した任意の値
 * @param $name variableで登録した任意の値
 */
@mixin fontSet($fontName, $path: $font-path, $name: $font-name) {
  @font-face {
    font-family: '#{$fontName}';
    src: url('#{$path}#{$name}.eot'),
    url('#{$path}#{$name}.eot?#iefix') format('embedded-opentype'),
    url('#{$path}#{$name}.woff2') format('woff2')
		url('#{$path}#{$name}.woff') format('woff'),
		url('#{$path}#{$name}.ttf') format('truetype'),
		url('#{$path}#{$name}.svg#fontawesomeregular') format('svg');
  }
}

/*
 * Iconをセットします
 * @desc webフォントアイコンのです
 * @param $icnName variableで登録した任意の名前
 */
@mixin iconset ($icnName) {
  &:before {
    $name: icon($icnName);
    content: #{$name};
  }
}

/*
 * AnimationMixin
 * @desc CSS3のアニメーション
 * @param $name variableで登録した任意の名前
 */
@mixin animation($name) {
  animation: $name 1.5s linear infinite;
  @include keys($name);
}

/*
 * AnimationMixin
 * @desc CSS3のアニメーションキーフレームを利用したもので主に回転系
 * @param $animetionName variableで登録した任意の名前
 * @param $anime variableで登録した任意の配列
 */
@mixin keys($animetionName, $anime: $animates) {
  @if map-has-key($anime, $animetionName) {
    @keyframes spin {
    	0% {transform: rotate(map-get(map-get($anime, $animetionName), start));}
    	100% {transform: rotate(map-get(map-get($anime, $animetionName), last));}
    }
  }
}
